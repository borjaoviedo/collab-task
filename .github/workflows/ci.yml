name: CI
on: [push, pull_request]

jobs:
  api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore api/CollabTask.sln --nologo

      - name: Build (Release)
        run: dotnet build api/CollabTask.sln --configuration Release --no-restore --nologo

      - name: Test (with coverage + threshold)
        run: |
          dotnet test api/CollabTask.sln \
            --configuration Release --no-build --nologo \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=cobertura
        env:
          ASPNETCORE_ENVIRONMENT: Testing
          DISABLE_DB_INIT: "true"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/TestResults/*.trx
            **/TestResults/*/coverage.cobertura.xml
          if-no-files-found: warn

  contract:
    runs-on: ubuntu-latest
    env:
      ASPNETCORE_URLS: "http://localhost:8080"
      ASPNETCORE_ENVIRONMENT: "Development"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install root deps
        run: npm ci

      - name: Generate OpenAPI spec and types
        run: npm run gen:all

      - name: Check OpenAPI contract
        run: npm run check:contract

      - name: Upload generated types
        uses: actions/upload-artifact@v4
        with:
          name: web-openapi-types
          path: web/src/shared/api/types.ts
          if-no-files-found: error

  web:
    runs-on: ubuntu-latest
    needs: contract
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: |
            web/package-lock.json

      - name: Install web deps
        run: npm ci

      - name: Type check
        run: npx tsc --noEmit

      - name: Test (Vitest coverage + thresholds)
        run: npm run test:coverage
        env:
          CI: true

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: web-coverage
          path: web/coverage
          if-no-files-found: warn

      - name: Build
        run: npm run build

      - name: Upload web dist
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist
          if-no-files-found: error
